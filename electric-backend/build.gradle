buildscript {
    ext {
        springBootVersion = '1.5.2.RELEASE'
        lombok = '1.16.18'
        redisEmbeddedVersion = '0.6'
        spockVersion = '1.1-groovy-2.4'
        springWiremock = '1.2.4.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.17.2"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.2.RELEASE")
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'application'
apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: "io.spring.dependency-management"
apply plugin: 'com.palantir.docker'

group = 'com.stosik'
sourceCompatibility = 1.8
targetCompatibility = 1.8

bootJar {
    baseName = 'electric-service'
}

distZip.enabled = false
distTar.enabled = false
jar.enabled = true

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile "org.projectlombok:lombok:$lombok"
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.session:spring-session-data-redis')
    compile('com.google.code.findbugs:jsr305:3.0.0')
    compile ('io.lettuce:lettuce-core:5.1.0.M1')

    runtime('com.h2database:h2')
    runtime('org.postgresql:postgresql')

    testCompile("com.jayway.restassured:spring-mock-mvc:2.9.0")
    testCompile("org.spockframework:spock-core:$spockVersion")
    testCompile("org.spockframework:spock-spring:$spockVersion")
    testCompile("com.athaydes:spock-reports:1.6.0") {
        transitive = false
    }
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

docker {
    name "electric-service"
    files jar.archivePath
    files 'resources/application-dev.yml'
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}